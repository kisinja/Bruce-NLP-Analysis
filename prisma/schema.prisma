// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String?  @unique
  username String   @unique
  email    String   @unique
  avatar String?
  password String?

  translations TranslationHistory[] 
  sentimentAnalysis SentimentAnalysis[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TranslationHistory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId     String
  sourceLanguage String
  targetLanguage String
  originalText String
  translatedText String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [clerkUserId], references: [clerkId], onDelete: Cascade)
}

model SentimentAnalysis {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId String
  text        String
  label       String
  score       Float
  magnitude   Float?
  emoji       String?
  language    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [clerkUserId], references: [clerkId], onDelete: Cascade)
}